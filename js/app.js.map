{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap 443c3c3e726a9196bd0a","webpack:///external \"jQuery\"","webpack:///./assets/js/app.js","webpack:///./assets/js/component/hammer.js","webpack:///./assets/js/component/sidebar.js","webpack:///external \"Hammer\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","jQuery","$","sideNav","_interopRequireDefault","obj","__esModule","default","hammerify","el","options","$el","_jquery2","data","_hammerjs2","_jquery","_hammerjs","fn","hammer","this","each","Manager","prototype","emit","originalEmit","type","element","trigger","gesture","_typeof","Symbol","iterator","constructor","methods","init","defaults","menuWidth","edge","closeOnClick","draggable","extend","$this","menuId","attr","menu","css","$dragTarget","length","remove","append","left","addClass","right","hasClass","window","innerWidth","resize","menuOut","removeMenu","on","restoreNav","panning","overflow","width","velocity","opacity","duration","queue","easing","complete","translateX","removeAttr","prevent_default","bind","e","pointerType","x","center","$body","document","body","$overlay","oldWidth","click","rightPos","overlayPerc","Math","abs","velocityX","leftPos","off","destroy","show","hide","methodOrOptions","apply","Array","slice","arguments","error","Hammer"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/2017/js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(2);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(4);\n\tvar $ = __webpack_require__(1);\n\t$('[data-activates]').sideNav();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _jquery = __webpack_require__(1);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _hammerjs = __webpack_require__(5);\n\t\n\tvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction hammerify(el, options) {\n\t  var $el = (0, _jquery2.default)(el);\n\t  if (!$el.data(\"hammer\")) {\n\t    $el.data(\"hammer\", new _hammerjs2.default($el[0], options));\n\t  }\n\t}\n\t\n\t_jquery2.default.fn.hammer = function (options) {\n\t  return this.each(function () {\n\t    hammerify(this, options);\n\t  });\n\t};\n\t\n\t// extend the emit method to also trigger jQuery events\n\t_hammerjs2.default.Manager.prototype.emit = function (originalEmit) {\n\t  return function (type, data) {\n\t    originalEmit.call(this, type, data);\n\t    (0, _jquery2.default)(this.element).trigger({\n\t      type: type,\n\t      gesture: data\n\t    });\n\t  };\n\t}(_hammerjs2.default.Manager.prototype.emit);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar $ = __webpack_require__(1);\n\t__webpack_require__(3);\n\tvar methods = {\n\t  init: function init(options) {\n\t    var defaults = {\n\t      menuWidth: 300,\n\t      edge: 'left',\n\t      closeOnClick: false,\n\t      draggable: true\n\t    };\n\t    options = $.extend(defaults, options);\n\t\n\t    $(this).each(function () {\n\t      var $this = $(this);\n\t      var menuId = $this.attr('data-activates');\n\t      var menu = $(\"#\" + menuId);\n\t\n\t      // Set to width\n\t      if (options.menuWidth != 300) {\n\t        menu.css('width', options.menuWidth);\n\t      }\n\t\n\t      // Add Touch Area\n\t      var $dragTarget = $('.drag-target[data-sidenav=\"' + menuId + '\"]');\n\t      if (options.draggable) {\n\t        // Regenerate dragTarget\n\t        if ($dragTarget.length) {\n\t          $dragTarget.remove();\n\t        }\n\t\n\t        $dragTarget = $('<div class=\"drag-target\"></div>').attr('data-sidenav', menuId);\n\t        $('body').append($dragTarget);\n\t      } else {\n\t        $dragTarget = $();\n\t      }\n\t\n\t      if (options.edge == 'left') {\n\t        menu.css('transform', 'translateX(-100%)');\n\t        $dragTarget.css({ 'left': 0 }); // Add Touch Area\n\t      } else {\n\t        menu.addClass('right-aligned') // Change text-alignment to right\n\t        .css('transform', 'translateX(100%)');\n\t        $dragTarget.css({ 'right': 0 }); // Add Touch Area\n\t      }\n\t\n\t      // If fixed sidenav, bring menu out\n\t      if (menu.hasClass('fixed') && window.innerWidth > 992) {\n\t        menu.css('transform', 'translateX(0)');\n\t      }\n\t\n\t      // Window resize to reset on large screens fixed\n\t      if (menu.hasClass('fixed')) {\n\t        $(window).resize(function () {\n\t          if (window.innerWidth > 992) {\n\t            // Close menu if window is resized bigger than 992 and user has fixed sidenav\n\t            if ($('#sidenav-overlay').length !== 0 && menuOut) {\n\t              removeMenu(true);\n\t            } else {\n\t              menu.css('transform', 'translateX(0%)');\n\t            }\n\t          } else if (menuOut === false) {\n\t            if (options.edge === 'left') {\n\t              menu.css('transform', 'translateX(-100%)');\n\t            } else {\n\t              menu.css('transform', 'translateX(100%)');\n\t            }\n\t          }\n\t        });\n\t      }\n\t\n\t      // if closeOnClick, then add close event for all a tags in side sideNav\n\t      if (options.closeOnClick === true) {\n\t        menu.on(\"click.itemclick\", \"a:not(.collapsible-header)\", function () {\n\t          removeMenu();\n\t        });\n\t      }\n\t\n\t      var removeMenu = function removeMenu(restoreNav) {\n\t        panning = false;\n\t        menuOut = false;\n\t        // Reenable scrolling\n\t        $('body').css({\n\t          overflow: '',\n\t          width: ''\n\t        });\n\t\n\t        $('#sidenav-overlay').velocity({ opacity: 0 }, { duration: 200,\n\t          queue: false, easing: 'easeOutQuad',\n\t          complete: function complete() {\n\t            $(this).remove();\n\t          } });\n\t        if (options.edge === 'left') {\n\t          // Reset phantom div\n\t          $dragTarget.css({ width: '', right: '', left: '0' });\n\t          menu.velocity({ 'translateX': '-100%' }, { duration: 200,\n\t            queue: false,\n\t            easing: 'easeOutCubic',\n\t            complete: function complete() {\n\t              if (restoreNav === true) {\n\t                // Restore Fixed sidenav\n\t                menu.removeAttr('style');\n\t                menu.css('width', options.menuWidth);\n\t              }\n\t            }\n\t\n\t          });\n\t        } else {\n\t          // Reset phantom div\n\t          $dragTarget.css({ width: '', right: '0', left: '' });\n\t          menu.velocity({ 'translateX': '100%' }, { duration: 200,\n\t            queue: false,\n\t            easing: 'easeOutCubic',\n\t            complete: function complete() {\n\t              if (restoreNav === true) {\n\t                // Restore Fixed sidenav\n\t                menu.removeAttr('style');\n\t                menu.css('width', options.menuWidth);\n\t              }\n\t            }\n\t          });\n\t        }\n\t      };\n\t\n\t      // Touch Event\n\t      var panning = false;\n\t      var menuOut = false;\n\t\n\t      if (options.draggable) {\n\t        $dragTarget.on('click', function () {\n\t          if (menuOut) {\n\t            removeMenu();\n\t          }\n\t        });\n\t\n\t        $dragTarget.hammer({\n\t          prevent_default: false\n\t        }).bind('pan', function (e) {\n\t\n\t          if (e.gesture.pointerType == 'touch') {\n\t\n\t            var _x = e.gesture.center.x;\n\t\n\t            // Disable Scrolling\n\t            var $body = $(document.body);\n\t            var _$overlay = $('#sidenav-overlay');\n\t            var oldWidth = $body.innerWidth();\n\t            $body.css('overflow', 'hidden');\n\t            $body.width(oldWidth);\n\t\n\t            // If overlay does not exist, create one and if it is clicked, close menu\n\t            if (_$overlay.length === 0) {\n\t              _$overlay = $('<div id=\"sidenav-overlay\"></div>');\n\t              _$overlay.css('opacity', 0).click(function () {\n\t                removeMenu();\n\t              });\n\t              $('body').append(_$overlay);\n\t            }\n\t\n\t            // Keep within boundaries\n\t            if (options.edge === 'left') {\n\t              if (_x > options.menuWidth) {\n\t                _x = options.menuWidth;\n\t              } else if (_x < 0) {\n\t                _x = 0;\n\t              }\n\t            }\n\t\n\t            if (options.edge === 'left') {\n\t              // Left Direction\n\t              if (_x < options.menuWidth / 2) {\n\t                menuOut = false;\n\t              } else if (_x >= options.menuWidth / 2) {\n\t                // Right Direction\n\t                menuOut = true;\n\t              }\n\t            }\n\t            menu.css('transform', 'translateX(' + (_x - options.menuWidth) + 'px)');\n\t          } else {\n\t            // Left Direction\n\t            if (x < window.innerWidth - options.menuWidth / 2) {\n\t              menuOut = true;\n\t            } else if (x >= window.innerWidth - options.menuWidth / 2) {\n\t              // Right Direction\n\t              menuOut = false;\n\t            }\n\t            var rightPos = x - options.menuWidth / 2;\n\t            if (rightPos < 0) {\n\t              rightPos = 0;\n\t            }\n\t\n\t            menu.css('transform', 'translateX(' + rightPos + 'px)');\n\t          }\n\t\n\t          // Percentage overlay\n\t          var overlayPerc = void 0;\n\t          if (options.edge === 'left') {\n\t            overlayPerc = x / options.menuWidth;\n\t            $overlay.velocity({ opacity: overlayPerc }, { duration: 10, queue: false, easing: 'easeOutQuad' });\n\t          } else {\n\t            overlayPerc = Math.abs((x - window.innerWidth) / options.menuWidth);\n\t            $overlay.velocity({ opacity: overlayPerc }, { duration: 10, queue: false, easing: 'easeOutQuad' });\n\t          }\n\t        }).bind('panend', function (e) {\n\t\n\t          if (e.gesture.pointerType == 'touch') {\n\t            var _$overlay2 = $('<div id=\"sidenav-overlay\"></div>');\n\t            var velocityX = e.gesture.velocityX;\n\t            var _x2 = e.gesture.center.x;\n\t            var leftPos = _x2 - options.menuWidth;\n\t            var rightPos = _x2 - options.menuWidth / 2;\n\t            if (leftPos > 0) {\n\t              leftPos = 0;\n\t            }\n\t            if (rightPos < 0) {\n\t              rightPos = 0;\n\t            }\n\t            panning = false;\n\t\n\t            if (options.edge === 'left') {\n\t              // If velocityX <= 0.3 then the user is flinging the menu closed so ignore menuOut\n\t              if (menuOut && velocityX <= 0.3 || velocityX < -0.5) {\n\t                // Return menu to open\n\t                if (leftPos !== 0) {\n\t                  menu.velocity({ 'translateX': [0, leftPos] }, { duration: 300, queue: false, easing: 'easeOutQuad' });\n\t                }\n\t\n\t                _$overlay2.velocity({ opacity: 1 }, { duration: 50, queue: false, easing: 'easeOutQuad' });\n\t                $dragTarget.css({ width: '50%', right: 0, left: '' });\n\t                menuOut = true;\n\t              } else if (!menuOut || velocityX > 0.3) {\n\t                // Enable Scrolling\n\t                $('body').css({\n\t                  overflow: '',\n\t                  width: ''\n\t                });\n\t                // Slide menu closed\n\t                menu.velocity({ 'translateX': [-1 * options.menuWidth - 10, leftPos] }, { duration: 200, queue: false, easing: 'easeOutQuad' });\n\t                _$overlay2.velocity({ opacity: 0 }, { duration: 200, queue: false, easing: 'easeOutQuad',\n\t                  complete: function complete() {\n\t                    $(this).remove();\n\t                  } });\n\t                $dragTarget.css({ width: '10px', right: '', left: 0 });\n\t              }\n\t            } else {\n\t              if (menuOut && velocityX >= -0.3 || velocityX > 0.5) {\n\t                // Return menu to open\n\t                if (rightPos !== 0) {\n\t                  menu.velocity({ 'translateX': [0, rightPos] }, { duration: 300, queue: false, easing: 'easeOutQuad' });\n\t                }\n\t\n\t                _$overlay2.velocity({ opacity: 1 }, { duration: 50, queue: false, easing: 'easeOutQuad' });\n\t                $dragTarget.css({ width: '50%', right: '', left: 0 });\n\t                menuOut = true;\n\t              } else if (!menuOut || velocityX < -0.3) {\n\t                // Enable Scrolling\n\t                $('body').css({\n\t                  overflow: '',\n\t                  width: ''\n\t                });\n\t\n\t                // Slide menu closed\n\t                menu.velocity({ 'translateX': [options.menuWidth + 10, rightPos] }, { duration: 200, queue: false, easing: 'easeOutQuad' });\n\t                _$overlay2.velocity({ opacity: 0 }, { duration: 200, queue: false, easing: 'easeOutQuad',\n\t                  complete: function complete() {\n\t                    $(this).remove();\n\t                  } });\n\t                $dragTarget.css({ width: '10px', right: 0, left: '' });\n\t              }\n\t            }\n\t          }\n\t        });\n\t      }\n\t\n\t      $this.off('click.sidenav').on('click.sidenav', function () {\n\t        if (menuOut === true) {\n\t          menuOut = false;\n\t          panning = false;\n\t          removeMenu();\n\t        } else {\n\t          (function () {\n\t\n\t            // Disable Scrolling\n\t            var $body = $('body');\n\t            var $overlay = $('<div id=\"sidenav-overlay\"></div>');\n\t            var oldWidth = $body.innerWidth();\n\t            $body.css('overflow', 'hidden');\n\t            $body.width(oldWidth);\n\t\n\t            // Push current drag target on top of DOM tree\n\t            $body.append($dragTarget);\n\t\n\t            if (options.edge === 'left') {\n\t              $dragTarget.css({ width: '50%', right: 0, left: '' });\n\t              menu.velocity({ 'translateX': [0, -1 * options.menuWidth] }, { duration: 300, queue: false, easing: 'easeOutQuad' });\n\t            } else {\n\t              $dragTarget.css({ width: '50%', right: '', left: 0 });\n\t              menu.velocity({ 'translateX': [0, options.menuWidth] }, { duration: 300, queue: false, easing: 'easeOutQuad' });\n\t            }\n\t\n\t            $overlay.css('opacity', 0).click(function () {\n\t              menuOut = false;\n\t              panning = false;\n\t              removeMenu();\n\t              $overlay.velocity({ opacity: 0 }, { duration: 300, queue: false, easing: 'easeOutQuad',\n\t                complete: function complete() {\n\t                  $(this).remove();\n\t                } });\n\t            });\n\t            $body.append($overlay);\n\t            $overlay.velocity({ opacity: 1 }, { duration: 300, queue: false, easing: 'easeOutQuad',\n\t              complete: function complete() {\n\t                menuOut = true;\n\t                panning = false;\n\t              }\n\t            });\n\t          })();\n\t        }\n\t        return false;\n\t      });\n\t    });\n\t  },\n\t  destroy: function destroy() {\n\t    var $overlay = $('#sidenav-overlay');\n\t    var $dragTarget = $('.drag-target[data-sidenav=\"' + $(this).attr('data-activates') + '\"]');\n\t    $overlay.trigger('click');\n\t    $dragTarget.remove();\n\t    $(this).off('click');\n\t    $overlay.remove();\n\t  },\n\t  show: function show() {\n\t    this.trigger('click');\n\t  },\n\t  hide: function hide() {\n\t    $('#sidenav-overlay').trigger('click');\n\t  }\n\t};\n\t\n\t$.fn.sideNav = function (methodOrOptions) {\n\t  if (methods[methodOrOptions]) {\n\t    return methods[methodOrOptions].apply(this, Array.prototype.slice.call(arguments, 1));\n\t  } else if ((typeof methodOrOptions === 'undefined' ? 'undefined' : _typeof(methodOrOptions)) === 'object' || !methodOrOptions) {\n\t    // Default to 'init'\n\t    return methods.init.apply(this, arguments);\n\t  } else {\n\t    $.error('Method ' + methodOrOptions + ' does not exist on jQuery.sideNav');\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Hammer;\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/2017/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 443c3c3e726a9196bd0a","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 1\n// module chunks = 0","'use strict';\n\nrequire('./component/sidebar');\nconst $ = require('jquery');\n$('[data-activates]').sideNav();\n\n\n// WEBPACK FOOTER //\n// ./assets/js/app.js","'use strict';\n\nimport $ from 'jquery';\nimport Hammer from 'hammerjs';\n\nfunction hammerify(el, options) {\n  const $el = $(el);\n  if(!$el.data(\"hammer\")) {\n    $el.data(\"hammer\", new Hammer($el[0], options));\n  }\n}\n\n$.fn.hammer = function(options) {\n  return this.each(function() {\n    hammerify(this, options);\n  });\n};\n\n// extend the emit method to also trigger jQuery events\nHammer.Manager.prototype.emit = (function(originalEmit) {\n  return function(type, data) {\n    originalEmit.call(this, type, data);\n    $(this.element).trigger({\n      type: type,\n      gesture: data\n    });\n  };\n})(Hammer.Manager.prototype.emit);\n\n\n\n// WEBPACK FOOTER //\n// ./assets/js/component/hammer.js","'use strict';\nconst $ = require('jquery');\nrequire('./hammer');\nconst methods = {\n  init(options) {\n    const defaults = {\n      menuWidth: 300,\n      edge: 'left',\n      closeOnClick: false,\n      draggable: true\n    };\n    options = $.extend(defaults, options);\n\n    $(this).each(function(){\n      const $this = $(this);\n      const menuId = $this.attr('data-activates');\n      const menu = $(\"#\"+ menuId);\n\n      // Set to width\n      if (options.menuWidth != 300) {\n        menu.css('width', options.menuWidth);\n      }\n\n      // Add Touch Area\n      let $dragTarget = $(`.drag-target[data-sidenav=\"${menuId}\"]`);\n      if (options.draggable) {\n        // Regenerate dragTarget\n        if ($dragTarget.length) {\n          $dragTarget.remove();\n        }\n\n        $dragTarget = $('<div class=\"drag-target\"></div>').attr('data-sidenav', menuId);\n        $('body').append($dragTarget);\n      } else {\n        $dragTarget = $();\n      }\n\n      if (options.edge == 'left') {\n        menu.css('transform', 'translateX(-100%)');\n        $dragTarget.css({'left': 0}); // Add Touch Area\n      }\n      else {\n        menu.addClass('right-aligned') // Change text-alignment to right\n          .css('transform', 'translateX(100%)');\n        $dragTarget.css({'right': 0}); // Add Touch Area\n      }\n\n      // If fixed sidenav, bring menu out\n      if (menu.hasClass('fixed') && window.innerWidth > 992) {\n        menu.css('transform', 'translateX(0)');\n      }\n\n      // Window resize to reset on large screens fixed\n      if (menu.hasClass('fixed')) {\n        $(window).resize(() => {\n          if (window.innerWidth > 992) {\n            // Close menu if window is resized bigger than 992 and user has fixed sidenav\n            if ($('#sidenav-overlay').length !== 0 && menuOut) {\n              removeMenu(true);\n            } else {\n              menu.css('transform', 'translateX(0%)');\n            }\n          } else if (menuOut === false){\n            if (options.edge === 'left') {\n              menu.css('transform', 'translateX(-100%)');\n            } else {\n              menu.css('transform', 'translateX(100%)');\n            }\n          }\n        });\n      }\n\n      // if closeOnClick, then add close event for all a tags in side sideNav\n      if (options.closeOnClick === true) {\n        menu.on(\"click.itemclick\", \"a:not(.collapsible-header)\", function(){\n          removeMenu();\n        });\n      }\n\n      const removeMenu = function(restoreNav) {\n        panning = false;\n        menuOut = false;\n        // Reenable scrolling\n        $('body').css({\n          overflow: '',\n          width: ''\n        });\n\n        $('#sidenav-overlay').velocity({opacity: 0}, {duration: 200,\n          queue: false, easing: 'easeOutQuad',\n          complete: function() {\n            $(this).remove();\n          } });\n        if (options.edge === 'left') {\n          // Reset phantom div\n          $dragTarget.css({width: '', right: '', left: '0'});\n          menu.velocity(\n            {'translateX': '-100%'},\n            { duration: 200,\n              queue: false,\n              easing: 'easeOutCubic',\n              complete: function() {\n                if (restoreNav === true) {\n                  // Restore Fixed sidenav\n                  menu.removeAttr('style');\n                  menu.css('width', options.menuWidth);\n                }\n              }\n\n            });\n        }\n        else {\n          // Reset phantom div\n          $dragTarget.css({width: '', right: '0', left: ''});\n          menu.velocity(\n            {'translateX': '100%'},\n            { duration: 200,\n              queue: false,\n              easing: 'easeOutCubic',\n              complete: function() {\n                if (restoreNav === true) {\n                  // Restore Fixed sidenav\n                  menu.removeAttr('style');\n                  menu.css('width', options.menuWidth);\n                }\n              }\n            });\n        }\n      };\n\n\n\n      // Touch Event\n      let panning = false;\n      let menuOut = false;\n\n      if (options.draggable) {\n        $dragTarget.on('click', function(){\n          if (menuOut) {\n            removeMenu();\n          }\n        });\n\n        $dragTarget.hammer({\n          prevent_default: false\n        }).bind('pan', function(e) {\n\n          if (e.gesture.pointerType == 'touch') {\n\n            let x = e.gesture.center.x;\n\n            // Disable Scrolling\n            const $body = $(document.body);\n            let $overlay = $('#sidenav-overlay');\n            const oldWidth = $body.innerWidth();\n            $body.css('overflow', 'hidden');\n            $body.width(oldWidth);\n\n            // If overlay does not exist, create one and if it is clicked, close menu\n            if ($overlay.length === 0) {\n              $overlay = $('<div id=\"sidenav-overlay\"></div>');\n              $overlay.css('opacity', 0).click( function(){\n                removeMenu();\n              });\n              $('body').append($overlay);\n            }\n\n            // Keep within boundaries\n            if (options.edge === 'left') {\n              if (x > options.menuWidth) { x = options.menuWidth; }\n              else if (x < 0) { x = 0; }\n            }\n\n            if (options.edge === 'left') {\n              // Left Direction\n              if (x < (options.menuWidth / 2)) {\n                menuOut = false;\n              } else if (x >= (options.menuWidth / 2)) {\n                // Right Direction\n                menuOut = true;\n              }\n            }\n            menu.css('transform', 'translateX(' + (x - options.menuWidth) + 'px)');\n          } else {\n            // Left Direction\n            if (x < (window.innerWidth - options.menuWidth / 2)) {\n              menuOut = true;\n            } else if (x >= (window.innerWidth - options.menuWidth / 2)) {\n              // Right Direction\n              menuOut = false;\n            }\n            let rightPos = (x - options.menuWidth / 2);\n            if (rightPos < 0) {\n              rightPos = 0;\n            }\n\n            menu.css('transform', 'translateX(' + rightPos + 'px)');\n          }\n\n\n          // Percentage overlay\n          let overlayPerc;\n          if (options.edge === 'left') {\n            overlayPerc = x / options.menuWidth;\n            $overlay.velocity({opacity: overlayPerc }, {duration: 10, queue: false, easing: 'easeOutQuad'});\n          } else {\n            overlayPerc = Math.abs((x - window.innerWidth) / options.menuWidth);\n            $overlay.velocity({opacity: overlayPerc }, {duration: 10, queue: false, easing: 'easeOutQuad'});\n          }\n\n        }).bind('panend', (e) => {\n\n          if (e.gesture.pointerType == 'touch') {\n            const $overlay = $('<div id=\"sidenav-overlay\"></div>');\n            const velocityX = e.gesture.velocityX;\n            const x = e.gesture.center.x;\n            let leftPos = x - options.menuWidth;\n            let rightPos = x - options.menuWidth / 2;\n            if (leftPos > 0 ) {\n              leftPos = 0;\n            }\n            if (rightPos < 0) {\n              rightPos = 0;\n            }\n            panning = false;\n\n            if (options.edge === 'left') {\n              // If velocityX <= 0.3 then the user is flinging the menu closed so ignore menuOut\n              if ((menuOut && velocityX <= 0.3) || velocityX < -0.5) {\n                // Return menu to open\n                if (leftPos !== 0) {\n                  menu.velocity({'translateX': [0, leftPos]}, {duration: 300, queue: false, easing: 'easeOutQuad'});\n                }\n\n                $overlay.velocity({opacity: 1 }, {duration: 50, queue: false, easing: 'easeOutQuad'});\n                $dragTarget.css({width: '50%', right: 0, left: ''});\n                menuOut = true;\n              }\n              else if (!menuOut || velocityX > 0.3) {\n                // Enable Scrolling\n                $('body').css({\n                  overflow: '',\n                  width: ''\n                });\n                // Slide menu closed\n                menu.velocity({'translateX': [-1 * options.menuWidth - 10, leftPos]}, {duration: 200, queue: false, easing: 'easeOutQuad'});\n                $overlay.velocity({opacity: 0 }, {duration: 200, queue: false, easing: 'easeOutQuad',\n                  complete: function () {\n                    $(this).remove();\n                  }});\n                $dragTarget.css({width: '10px', right: '', left: 0});\n              }\n            }\n            else {\n              if ((menuOut && velocityX >= -0.3) || velocityX > 0.5) {\n                // Return menu to open\n                if (rightPos !== 0) {\n                  menu.velocity({'translateX': [0, rightPos]}, {duration: 300, queue: false, easing: 'easeOutQuad'});\n                }\n\n                $overlay.velocity({opacity: 1 }, {duration: 50, queue: false, easing: 'easeOutQuad'});\n                $dragTarget.css({width: '50%', right: '', left: 0});\n                menuOut = true;\n              }\n              else if (!menuOut || velocityX < -0.3) {\n                // Enable Scrolling\n                $('body').css({\n                  overflow: '',\n                  width: ''\n                });\n\n                // Slide menu closed\n                menu.velocity({'translateX': [options.menuWidth + 10, rightPos]}, {duration: 200, queue: false, easing: 'easeOutQuad'});\n                $overlay.velocity({opacity: 0 }, {duration: 200, queue: false, easing: 'easeOutQuad',\n                  complete: function () {\n                    $(this).remove();\n                  }});\n                $dragTarget.css({width: '10px', right: 0, left: ''});\n              }\n            }\n\n          }\n        });\n      }\n\n      $this.off('click.sidenav').on('click.sidenav', function() {\n        if (menuOut === true) {\n          menuOut = false;\n          panning = false;\n          removeMenu();\n        } else {\n\n          // Disable Scrolling\n          const $body = $('body');\n          const $overlay = $('<div id=\"sidenav-overlay\"></div>');\n          const oldWidth = $body.innerWidth();\n          $body.css('overflow', 'hidden');\n          $body.width(oldWidth);\n\n          // Push current drag target on top of DOM tree\n          $body.append($dragTarget);\n\n          if (options.edge === 'left') {\n            $dragTarget.css({width: '50%', right: 0, left: ''});\n            menu.velocity({'translateX': [0, -1 * options.menuWidth]}, {duration: 300, queue: false, easing: 'easeOutQuad'});\n          }\n          else {\n            $dragTarget.css({width: '50%', right: '', left: 0});\n            menu.velocity({'translateX': [0, options.menuWidth]}, {duration: 300, queue: false, easing: 'easeOutQuad'});\n          }\n\n          $overlay.css('opacity', 0)\n            .click(function(){\n              menuOut = false;\n              panning = false;\n              removeMenu();\n              $overlay.velocity({opacity: 0}, {duration: 300, queue: false, easing: 'easeOutQuad',\n                complete: function() {\n                  $(this).remove();\n                } });\n\n            });\n          $body.append($overlay);\n          $overlay.velocity({opacity: 1}, {duration: 300, queue: false, easing: 'easeOutQuad',\n            complete: function () {\n              menuOut = true;\n              panning = false;\n            }\n          });\n        }\n        return false;\n      });\n    });\n\n\n  },\n  destroy() {\n    const $overlay = $('#sidenav-overlay');\n    const $dragTarget = $('.drag-target[data-sidenav=\"' + $(this).attr('data-activates') + '\"]');\n    $overlay.trigger('click');\n    $dragTarget.remove();\n    $(this).off('click');\n    $overlay.remove();\n  },\n  show() {\n    this.trigger('click');\n  },\n  hide() {\n    $('#sidenav-overlay').trigger('click');\n  }\n};\n\n\n$.fn.sideNav = function(methodOrOptions) {\n  if ( methods[methodOrOptions] ) {\n    return methods[ methodOrOptions ].apply( this, Array.prototype.slice.call( arguments, 1 ));\n  } else if ( typeof methodOrOptions === 'object' || ! methodOrOptions ) {\n    // Default to 'init'\n    return methods.init.apply( this, arguments );\n  } else {\n    $.error( 'Method ' +  methodOrOptions + ' does not exist on jQuery.sideNav' );\n  }\n};\n\n\n// WEBPACK FOOTER //\n// ./assets/js/component/sidebar.js","module.exports = Hammer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Hammer\"\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}